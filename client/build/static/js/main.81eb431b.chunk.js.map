{"version":3,"sources":["keys.js","components/navbar/index.js","components/jumbotron/index.js","components/results/index.js","components/search/index.js","utils/API.js","pages/search.js","components/savedResults/index.js","pages/saved.js","App.js","serviceWorker.js","index.js"],"names":["console","log","process","TESTING","exports","google","key","GOOGLE_API","test","Navbar","className","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","jumbotron","results","props","title","subtitle","authors","map","author","alt","src","image","description","infoLink","onClick","Input","aria-describedby","placeholder","FormBtn","getBooks","query","Axios","get","getSavedBooks","saveBook","bookData","post","SearchPage","state","books","handleInputChange","event","target","name","value","setState","logResData","res","i","data","items","length","push","volumeInfo","newObj","API","then","catch","err","getSearchQuery","preventDefault","onChange","this","book","imageLinks","thumbnail","Component","saved","loadBooks","App","exact","path","component","SavedPage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81eb431b.chunk.js","sourcesContent":["console.log(\"Keys is loaded\");\n\nconsole.log(process.env.TESTING);\n\nexports.google = {\n    key: process.env.GOOGLE_API,\n    test: \"test\",\n};","import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(){\n    return(\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <a className=\"navbar-brand\" href=\"/\">Google Books</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"/\">Search</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"/saved\">Saved</a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from \"react\";\nimport \"./style.css\";\n\nfunction jumbotron(){\n    return(\n        <div className=\"jumbotron jumbotron-fluid\">\n            <div className=\"container\">\n                <h1 className=\"display-4\">(React) Google Books</h1>\n                <p className=\"lead\">Search for and Save Books of Interest</p>\n            </div>\n        </div>\n    )\n}\nexport default jumbotron;","import React from \"react\";\nimport \"./style.css\";\n\nfunction results(props) {\n    // console.log(props);\n    return (\n        <div className=\"resultsDiv\">\n            <h3 className=\"title\">{props.title}</h3>\n            <h4 className=\"subtitle\">{props.subtitle}</h4>\n            {props.authors.map(author => {\n                return (\n                    <h5 className=\"authors\">{author}</h5>\n                )\n            })}\n            <div className=\"row\">\n                <div className=\"col-1\">\n                <img alt={props.title} className=\"image\" src={props.image} />\n    \n                </div>\n                <div className=\"col-11\">\n                    <p className=\"description\">{props.description}</p>\n                </div>\n            </div>\n               \n            <button className=\"btn btn-success gplayLink\" href={props.infoLink}>Google Play Preview</button>\n            <button className=\"btn btn-failure saved\" onClick={() => props.onClick(props)}>Save</button>\n        </div>\n        );\n    \n}\n\nexport default results;","import React from \"react\";\nimport \"./style.css\";\n\nexport function Input(props) {\n    return (\n        <div className=\"row\">\n            <div className=\"col\"></div>\n            <div className=\"col-6 searchBar form-group\">\n                \n                <input className=\"form-control\" id=\"exampleBookSearch\" aria-describedby=\"bookHelp\" placeholder=\"Enter Book\" {...props} />\n            </div>\n            <div className=\"col\"></div>\n        </div>\n\n\n    );\n}\n\nexport function FormBtn(props) {\n    return (\n        <div className=\"row\">\n            <div className=\"col\"></div>\n            <div className=\"col-6\">\n                <button type=\"button\" {...props} className=\"searchBtn btn btn-success\">\n                    Search\n                </button>\n            </div>\n            <div className=\"col\"></div>\n        </div>\n\n    )\n}\n\n// export default search;","import Axios from \"axios\";\nimport keys from \"../keys\";\n\nexport default {\n    getBooks: function(query){\n\n        //Need to change the API call to go by the query\n        // console.log(\"https://www.googleapis.com/books/v1/volumes?q=flowers+inauthor:keyes&key=\" + keys.google);\n        // console.log(\"https://www.googleapis.com/books/v1/volumes?q=flowers+inauthor:keyes&key=AIzaSyA4xCXz7uVrKx1QisuTCDqLPf1q4bTiuR4\");\n        // console.log(keys.google);\n        // return Axios.get(\"https://www.googleapis.com/books/v1/volumes?q=flowers+inauthor:keyes&key=\" + keys.google.key);\n        // return Axios.get(\"https://www.googleapis.com/books/v1/volumes?q=Harry Potter&key=AIzaSyA4xCXz7uVrKx1QisuTCDqLPf1q4bTiuR4\");\n        return Axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query + \"&key=AIzaSyA4xCXz7uVrKx1QisuTCDqLPf1q4bTiuR4\");\n    },\n    getSavedBooks: function(){\n        return Axios.get(\"/api/books\");\n    },\n\n    saveBook: function(bookData) {\n        return Axios.post(\"/api/books\", bookData);\n    }\n}","import React, { Component } from \"react\";\nimport Results from \"./../components/results\";\nimport { Input, FormBtn } from \"./../components/search\";\nimport API from \"./../utils/API\";\nimport \"./search.css\";\n// import { Link } from \"react-router-dom\";\n\nclass SearchPage extends Component {\n    state = {\n        books: [],\n        title: \"\"\n    };\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n        // console.log(this.state.title);\n    }\n\n    logResData = res => {\n        for (let i = 0; i < res.data.items.length; i++) {\n            // console.log(res.data.items[i].volumeInfo);\n            this.state.books.push(res.data.items[i].volumeInfo);\n        }\n        // console.log(\"BOOKS\");\n        // console.log(this.state.books);\n        // console.log(\"END OF BOOKS\");\n    }\n\n    saveBook = event => {\n        // API.saveBook(props).then(res => console.log(res)).catch(err => console.log(err));\n        // console.log(\"test\");\n        console.log(event);\n        const newObj = {\n            title: event.title,\n            subtitle: event.subtitle,\n            authors: event.authors[0],\n            description: event.description,\n            image: event.image,\n            infoLink: event.infoLink,\n        }\n\n        console.log(newObj);\n        // API.saveBook(event).then(res => console.log(res)).catch(err => console.log(err));\n        API.saveBook(newObj).then(res => console.log(res)).catch(err => console.log(err));\n    }\n\n    getSearchQuery = event => {\n        // event.preventDefault();\n        event.preventDefault();\n        // API.getBooks().then(res => this.setState({books: res.data})).catch(err => console.log(err));\n        // API.getBooks().then(res => console.log(res.data.items)).catch(err => console.log(err));\n        // API.getBooks().then(res =>  for(let i = 0; i < res.data.items.length; i++){console.log(res.data.items[i].volumeInfo);}).catch(console.log(err));\n        // API.getBooks().then(res => this.logResData(res)).catch(err => console.log(err));\n        // API.getBooks().then(res => this.setState({books: res.data})).catch(err => console.log(err));\n        // API.getBooks().then(res => console.log(res.data.items)).catch(err => console.log(err));\n        API.getBooks(this.state.title).then(res => this.setState({ books: res.data.items })).catch(err => console.log(err));\n        // console.log(this.state.books);\n        // console.log(this.state.books);\n        // console.log(this.state);\n    }\n\n\n\n\n    //Change all the search functions into individual components\n    render() {\n        return (\n            <div className=\"row test\">\n                <div className=\"col test\"></div>\n                <div className=\"col-8\">\n                    <div className=\"searchResultsContainer\">\n                        {/* <Search\n                    onChange={this.handleInputChange}\n                    name=\"title\"\n                    onClick={this.getSearchQuery}\n                /> */}\n                        <form>\n                            <h2 className=\"jumbotronTitle\">Book Search</h2>\n                            <Input\n                                onChange={this.handleInputChange}\n                                name=\"title\"\n                            />\n                            <FormBtn\n                                onClick={this.getSearchQuery}\n                            />\n                        </form>\n                        <h2 className=\"resultsTitle\">Results</h2>\n                        {!this.state.books.length ? (\n                            <h1 className=\"noBooks text-center\">No Books to Display</h1>\n                        ) : (\n                                <div className=\"resultsContainer col-12\">\n                                    {this.state.books.map(book => {\n                                        // console.log(book.title);\n                                        return (\n                                            <Results\n                                                key={book.title}\n                                                title={book.volumeInfo.title}\n                                                subtitle={book.volumeInfo.subtitle}\n                                                authors={book.volumeInfo.authors}\n                                                description={book.volumeInfo.description}\n                                                image={book.volumeInfo.imageLinks.thumbnail}\n                                                infoLink={book.volumeInfo.infoLink}\n                                                onClick={this.saveBook}\n                                            />\n                                        );\n                                    })}\n                                </div>\n\n                            )}\n\n                    </div>\n                </div>\n                <div className=\"col\"></div>\n            </div>\n\n        )\n    }\n}\n\nexport default SearchPage;","import React from \"react\";\nimport \"./style.css\";\n\nfunction results(props){\n    return(\n        <div className=\"savedDiv\">\n            <h3 className=\"title\">{props.title}</h3>\n            <h4 className=\"subtitle\">{props.subtitle}</h4>\n            <h5 className=\"authors\">{props.authors}</h5>\n            <div className=\"row\">\n                <div className=\"col-1\">\n                    <img alt={props.title} className=\"image\" src={props.image}/>\n                </div>\n                <div className=\"col-11\">\n                    <p className=\"description\">{props.description}</p>\n                </div>\n            </div>\n            <button className=\"btn btn-success gplayLink\" href={props.infoLink}>Google Play Preview</button>\n        </div>\n\n    )\n}\n\nexport default results;","import React, { Component } from \"react\";\nimport API from \"./../utils/API\";\nimport Results from \"./../components/savedResults\";\n\n\nclass saved extends Component{\n    state ={ \n        books: [],\n    }\n    componentDidMount(){\n        this.loadBooks();\n    }\n    loadBooks = () => {\n        API.getSavedBooks()\n            .then(res =>\n                this.setState({books: res.data}))\n            .catch(err => console.log(err));\n    }\n    render(){\n        return(\n            <div>\n                {this.state.books.length ? (\n                    // <h2>No Books to display</h2>\n                    <div className=\"savedContainer col-12\">\n                        {this.state.books.map(book => {\n                            return (\n                                <Results\n                                    key={book.title}\n                                    title={book.title}\n                                    subtitle={book.subtitle}\n                                    authors={book.author}\n                                    description={book.description}\n                                    image={book.image}\n                                    infoLink={book.infoLink}\n                                />\n                            )\n                        })}\n                    </div>\n                ) : (<h2>No Books to display</h2>)}\n            </div>\n        )\n    }\n}\n\nexport default saved;","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Navbar from \"./components/navbar\";\nimport Jumbotron from \"./components/jumbotron\";\n// import Search from \"./components/search\";\n// import Results from \"./components/results\";\nimport SearchPage from \"./pages/search.js\";\nimport SavedPage from \"./pages/saved.js\";\n\n// function App() {\n//   return (\n//     <div className=\"container\">\n//       <Navbar />\n//       <Jumbotron />\n//       <Search />\n//       <Results />\n//     </div>\n//   );\n// }\n\nclass App extends Component {\n  state = {};\n\n  render(){\n    return(\n      <Router>\n        <div >\n          <Navbar />\n          <Jumbotron />\n          <Switch>\n            <Route exact path=\"/\" component={SearchPage}/>\n            <Route exact path=\"/saved\" component={SavedPage}/>\n            <Route component={SearchPage}/>\n          </Switch>\n          {/* {/* <Navbar />\n          <Jumbotron />\n          <Search />\n          <Results /> */}\n        </div>\n      </Router>\n\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}